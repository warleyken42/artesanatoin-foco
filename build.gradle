plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'br.com.revistainfoco'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.yaml:snakeyaml:1.29'
	implementation 'org.modelmapper:modelmapper:3.0.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/coverage")
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'br/com/revistainfoco/revista/config/**',
							'br/com/revistainfoco/revista/errors/**',
							'br/com/revistainfoco/revista/domain/**',
							'br/com/revistainfoco/revista/FadmsApplication.class',
					]
			)
		}))
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
	}
}
